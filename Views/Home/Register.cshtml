@model MemberForm.Models.RegistrationVM

<div class="d-flex justify-content-center">
    <div class=" card alert d-flex m-4 fw-bold alert alert-success " style="width:35%">
        @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="text-align:center" class="alert alert-warning">Member Registration</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MemberId)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.JoiningDate, new { @type = "date", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvestmentDate, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.InvestmentDate, new { @type = "date", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InvestmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IDProof, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.IDProof, htmlAttributes: new { @type = "file", @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.IDProof, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Photo, htmlAttributes: new { @type = "file", @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <input type="submit" value="SUBMIT" class="btn btn-outline-success" style="margin-top:8%" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-info", style = "margin-top:8%" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
